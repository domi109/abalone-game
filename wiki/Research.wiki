#summary Lists all research found by team
= Introduction =

This is a quick overview of different approaches to artificial intelligence which could be interesting to implement into the abalone-game.

= Table of Contents =
<wiki:toc max_depth="3"/>

= Research =

== Game Complexity ==

== Standard Game Tree Search Algorithms ==

=== Minimax Algorithm ===
[http://en.wikipedia.org/wiki/Minimax Minimax] is 

=== Alpha-Beta Pruning ===
[http://en.wikipedia.org/wiki/Alpha-beta_pruning Alpha-Beta] is

=== Negascout Algorithm ===
[http://en.wikipedia.org/wiki/Negascout Negascout] is

=== SSS Star Algorithm ===
[http://en.wikipedia.org/wiki/SSS* SSS Star] is

=== Iterative Deepening ===
[http://en.wikipedia.org/wiki/Iterative_deepening_depth-first_search Iterative Deepening] is 

== Evaluation Functions ==

== Machine Learning ==
Stuff about machine learning here.

= Resources =
[http://dme.uma.pt/people/faculty/pedro.campos/papers/Abalearn.pdf Abalearn: Efficient Self-Play Learning of the game Abalone] by Pedro Campos and Thibault Langlois.

[http://books.google.nl/books?id=L4h2A2vF2pUC&pg=PA35&lpg=PA35&dq=%22machine+learning%22%2Babalone&source=bl&ots=3KOwjAK1zv&sig=kTf2yF8uy4t8g8Jx8r09T9jvd_M&hl=nl&ei=sfqxSvOwN8bi-QaZvsXcCQ&sa=X&oi=book_result&ct=result&resnum=5#v=onepage&q=%22machine%20learning%22%2Babalone&f=false Abalearn: A Risk-Sensitive Approach to Self-play Learning in Abalone] by Pedro Campos and Thibault Langlois.

[http://www.unimaas.nl/games/files/pcreport.pdf Implementing a Computer Player for Abalone using Alpha-Beta and Monte-Carlo Search] by Pascal Chorus.

[http://cse.yeditepe.edu.tr/~eozcan/research/papers/ABLA_id136final.pdf A Simple Intelligent Agent for Playing Abalone Game: ABLA] by Ender Ozcan and Berk Hulagu.

[http://www.cs.unimaas.nl/~uiterwyk/Theses/BSc/Lemmens_BSc-paper.pdf Constructing an Abalone Game-Playing Agent] by N.P.P.M. Lemmens.

[http://stackoverflow.com/questions/1291377/how-do-i-create-a-good-evaluation-function-for-a-new-board-game Forum discussion] about evaluation functions.